library(twitteR)
library(ROAuth)
library(tidyverse)
library(text2vec)
library(caret)
library(glmnet)
library(ggrepel)
library(purrrlyr)
library(twitteR)
library(ROAuth)
library(tidyverse)
library(text2vec)
library(caret)
library(glmnet)
library(ggrepel)
library(purrrlyr)
library(twitteR)
library(ROAuth)
library(tidyverse)
library(text2vec)
library(caret)
library(glmnet)
library(ggrepel)
library(purrrlyr)
conv_fun <- function(x) iconv(x, "latin1", "ASCII", "")
tweets_classified <- read_csv('training.1600000.processed.noemoticon.csv',
col_names = c('sentiment', 'id', 'date', 'query', 'user', 'text')) %>%
#   # converting some symbols
dmap_at('text', conv_fun) %>%
#   # replacing class values
mutate(sentiment = ifelse(sentiment == 0, 0, 1))
tweets_classified_na <- tweets_classified %>%
filter(is.na(id) == TRUE) %>%
mutate(id = c(1:n()))
tweets_classified <- tweets_classified %>%
filter(!is.na(id)) %>%
rbind(., tweets_classified_na)
set.seed(2340)
trainIndex <- createDataPartition(tweets_classified$sentiment, p = 0.8,
list = FALSE,times = 1)
tweets_train <- tweets_classified[trainIndex, ]
tweets_test <- tweets_classified[-trainIndex, ]
prep_fun <- tolower
tok_fun <- word_tokenizer
it_train <- itoken(tweets_train$text,
preprocessor = prep_fun,
tokenizer = tok_fun,
ids = tweets_train$id,
progressbar = TRUE)
it_test <- itoken(tweets_test$text,
preprocessor = prep_fun,
tokenizer = tok_fun,
ids = tweets_test$id,
progressbar = TRUE)
vocab <- create_vocabulary(it_train)
vectorizer <- vocab_vectorizer(vocab)
tfidf <- TfIdf$new()
df_tweets <- read_csv('Tweet_Data/Tweet_text.csv') %>%
# converting some symbols
dmap_at('text', conv_fun)
it_tweets <- itoken(df_tweets$text,
preprocessor = prep_fun,
tokenizer = tok_fun,
ids = df_tweets$id,
progressbar = TRUE)
dtm_tweets <- create_dtm(it_tweets, vectorizer)
dtm_train_tfidf <- fit_transform(dtm_tweets, tfidf)
dtm_tweets_tfidf <- fit_transform(dtm_tweets, tfidf)
glmnet_classifier <- readRDS('Model/glmnet_classifier.RDS')
preds_tweets <- predict(glmnet_classifier, dtm_tweets_tfidf, type = 'response')[ ,1]
df_tweets$sentiment <- preds_tweets
print(df_tweets)
library(TweetSenti)
